{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Harel\\\\Desktop\\\\JS\\\\frontend\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Image from \"react-bootstrap/Image\";\nimport io from \"socket.io-client\";\nimport Badge from \"react-bootstrap/Badge\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Board from \"./components/Board\";\nimport ScoreBoard from \"./components/ScoreBoard\";\nconst status = {\n  INITIAL: \"initial\",\n  CREATED: \"created\",\n  RUNNING: \"running\",\n  FINISHED: \"finished\"\n};\nconst currentTurn = {\n  NONE: \"none\",\n  HOST: \"host\",\n  HOSTED: \"hosted\"\n};\nconst winner = {\n  INITIAL: \"initial\",\n  HOST: \"host\",\n  HOSTED: \"hosted\"\n};\nconst socket = io(\"http://localhost:3000\");\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      game_id: -1,\n      game_name: \"\",\n      user_id: \"\",\n      user_name: \"\",\n      status: status.INITIAL,\n      board: [],\n      captain_mode: false,\n      is_host: false,\n      start_button_clicked: false,\n      current_turn: currentTurn.NONE,\n      players: [],\n      previous_game: {}\n    };\n\n    this.createNewGame = () => {\n      this.setState({\n        is_host: true\n      });\n      socket.emit(\"CREATE_GAME\", {\n        game_name: this.state.game_name,\n        user_id: this.state.user_id,\n        user_name: this.state.user_name\n      });\n    };\n\n    this.ConnectGame = () => {\n      socket.emit(\"CONNECT_GAME\", {\n        game_id: this.state.game_id,\n        user_id: this.state.user_id,\n        user_name: this.state.user_name\n      });\n    };\n\n    this.changeToCaptainMode = e => {\n      console.log(\"on changeToCaptainMode\");\n      this.setState({\n        captain_mode: true\n      });\n    };\n\n    this.changeBackToNormalMode = e => {\n      console.log(\"on changeBackToNormalMode\");\n      this.setState({\n        captain_mode: false\n      });\n    };\n\n    this.isMyTurn = () => {\n      let res = false;\n      if (this.state.is_host == true && this.state.current_turn == currentTurn.HOST) res = true;else if (this.state.is_host == false && this.state.current_turn == currentTurn.HOSTED) res = true;\n      console.log(res);\n      return res;\n    };\n\n    this.startButtonOnClick = e => {\n      this.setState({\n        start_button_clicked: true\n      });\n      socket.emit(\"START_GAME\", {\n        game_id: this.state.game_id\n      });\n    };\n\n    this.rematchButtonOnClick = e => {\n      socket.emit(\"REMATCH\", this.state.previous_game);\n    };\n  }\n\n  componentDidMount() {\n    // socket = io(\"http://localhost:3000\");\n    socket.on(\"INITIAL_USER_DATA\", data => {\n      this.setState({\n        user_id: data.user_id\n      });\n      console.log(\"success!!!!!! user id is:\" + this.state.user_id);\n    });\n    socket.on(\"GAME_CREATED\", data => {\n      this.setState({\n        status: status.CREATED,\n        game_id: data.Id\n      });\n    });\n    socket.on(\"RUN_GAME\", data => {\n      this.setState({\n        status: status.RUNNING,\n        board: data.Board\n      });\n    });\n    socket.on(\"START_GAME\", data => {\n      this.setState({\n        current_turn: currentTurn.HOST,\n        players: [{\n          name: \"Red Team\",\n          score: data.HostPlayer.Score,\n          id: 1\n        }, {\n          name: \"Blue Team\",\n          score: data.HostedPlayer.Score,\n          id: 2\n        }]\n      });\n    });\n    socket.on(\"UPDATE_BOARD\", data => {\n      this.setState({\n        board: data.Board,\n        current_turn: data.HostTurn ? currentTurn.HOST : currentTurn.HOSTED,\n        winner: data.Winner,\n        status: data.Winner != winner.INITIAL ? status.FINISHED : this.state.status,\n        players: [{\n          name: \"Red Team\",\n          score: data.HostPlayer.Score,\n          id: 1\n        }, {\n          name: \"Blue Team\",\n          score: data.HostedPlayer.Score,\n          id: 2\n        }]\n      });\n\n      if (data.Winner != winner.INITIAL && this.state.is_host) {\n        socket.emit(\"END_GAME\", {\n          game_id: this.state.game_id\n        });\n      }\n    });\n    socket.on(\"SAVE_PREVIOUS\", data => {\n      this.setState({\n        previous_game: data\n      });\n    });\n    socket.on(\"INITIALIZE_STATE\", data => {\n      this.setState({\n        game_id: data.game.Id,\n        game_name: data.game.Name,\n        user_id: data.is_host ? data.game.HostPlayer.Id : data.game.HostedPlayer.Id,\n        user_name: data.is_host ? data.game.HostPlayer.Name : data.game.HostedPlayer.Name,\n        status: status.INITIAL,\n        board: [],\n        captain_mode: false,\n        is_host: data.is_host ? true : false,\n        start_button_clicked: false,\n        current_turn: currentTurn.NONE,\n        players: []\n      });\n    });\n  }\n\n  render() {\n    let onChangeModeClick = this.state.captain_mode ? this.changeBackToNormalMode : this.changeToCaptainMode;\n    const ChangeModeStyle = {\n      fontFamily: \"Guttman Vilna\",\n      marginTop: \"0.5%\",\n      fontWeight: \"bold\",\n      fontSize: \"150%\"\n    };\n    const teamColor = this.state.current_turn == currentTurn.HOST ? \"RED\" : \"BLUE\";\n    const turnMessageVariant = this.state.current_turn == currentTurn.HOST ? \"danger\" : \"primary\";\n    const winnerColor = this.state.winner == winner.HOST ? \"RED\" : \"BLUE\";\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      className: this.state.status === status.RUNNING ? \"Img animator\" : \"Img\",\n      src: \"https://upload.wikimedia.org/wikipedia/he/4/48/Codenames-hebrew-cover.jpg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }\n    }), this.state.status === status.INITIAL ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Accordion, {\n      className: \"Acc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"cards\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Accordion.Toggle, {\n      as: Button,\n      variant: \"info\",\n      eventKey: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 19\n      }\n    }, \"Create Game!\")), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n      eventKey: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      className: \"CardBody\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridUserName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      className: \"labels\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 27\n      }\n    }, \"User Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n      placeholder: \"Enter user name\",\n      onChange: e => {\n        this.setState({\n          user_name: e.target.value\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridRoomID\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      className: \"labels\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 27\n      }\n    }, \"Room Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n      placeholder: \"Enter room Name\",\n      onChange: e => {\n        this.setState({\n          game_name: e.target.value\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 27\n      }\n    })))), /*#__PURE__*/React.createElement(Button, {\n      variant: \"success\",\n      type: \"submit\",\n      onClick: e => {\n        this.createNewGame();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 21\n      }\n    }, \"Submit\")))), /*#__PURE__*/React.createElement(Card, {\n      className: \"cards\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Accordion.Toggle, {\n      className: \"ab\",\n      as: Button,\n      variant: \"info\",\n      eventKey: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 19\n      }\n    }, \"Join Game!\")), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n      eventKey: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      className: \"CardBody\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridUserName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      className: \"labels\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 27\n      }\n    }, \"User Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n      placeholder: \"Enter user name\",\n      onChange: e => {\n        this.setState({\n          user_name: e.target.value\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridRoomID\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      className: \"labels\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 27\n      }\n    }, \"Room Id\"), /*#__PURE__*/React.createElement(Form.Control, {\n      placeholder: \"Enter room ID\",\n      onChange: e => {\n        this.setState({\n          game_id: e.target.value\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 27\n      }\n    })))), /*#__PURE__*/React.createElement(Button, {\n      variant: \"success\",\n      type: \"submit\",\n      onClick: e => {\n        this.ConnectGame();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 21\n      }\n    }, \"Submit\")))))) : null, this.state.status === status.CREATED ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Badge, {\n      variant: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 15\n      }\n    }, \"Room #\", this.state.game_id, \" had been created!\")), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Badge, {\n      variant: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 15\n      }\n    }, \"Waiting for a player to join...\")), /*#__PURE__*/React.createElement(Spinner, {\n      className: \"sp\",\n      animation: \"grow\",\n      variant: \"danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 13\n      }\n    })) : null, this.state.status === status.RUNNING ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 13\n      }\n    }, this.state.is_host ? !this.state.start_button_clicked ? /*#__PURE__*/React.createElement(Button, {\n      style: ChangeModeStyle,\n      variant: \"success\",\n      onClick: this.startButtonOnClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 19\n      }\n    }, \"Start\") : null : this.state.current_turn == currentTurn.NONE ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Badge, {\n      style: ChangeModeStyle,\n      variant: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 19\n      }\n    }, \"Waiting for Host to start the game..\"), /*#__PURE__*/React.createElement(Spinner, {\n      animation: \"border\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 19\n      }\n    })) : null), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 13\n      }\n    }, this.state.current_turn != currentTurn.NONE ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sb\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ScoreBoard, {\n      turn: this.state.current_turn,\n      initialPlayers: this.state.players,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"dark\",\n      style: ChangeModeStyle,\n      onClick: onChangeModeClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 19\n      }\n    }, \"Captain View\")) : null), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Board, {\n      board: this.state.board,\n      isHost: this.state.is_host,\n      currentTurn: this.state.current_turn,\n      captainMode: this.state.captain_mode,\n      socket: socket,\n      gameId: this.state.game_id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 15\n      }\n    }))) : null, this.state.status === status.FINISHED ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Badge, {\n      style: ChangeModeStyle,\n      variant: winnerColor == \"RED\" ? \"danger\" : \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 15\n      }\n    }, winnerColor, \" Team won!\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      style: ChangeModeStyle,\n      variant: \"dark\",\n      onClick: this.rematchButtonOnClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 15\n      }\n    }, \"REMATCH!\"))) : null);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Harel/Desktop/JS/frontend/src/App.js"],"names":["React","Component","Accordion","Card","Button","Form","Col","Row","Image","io","Badge","Spinner","Board","ScoreBoard","status","INITIAL","CREATED","RUNNING","FINISHED","currentTurn","NONE","HOST","HOSTED","winner","socket","App","constructor","props","state","game_id","game_name","user_id","user_name","board","captain_mode","is_host","start_button_clicked","current_turn","players","previous_game","createNewGame","setState","emit","ConnectGame","changeToCaptainMode","e","console","log","changeBackToNormalMode","isMyTurn","res","startButtonOnClick","rematchButtonOnClick","componentDidMount","on","data","Id","name","score","HostPlayer","Score","id","HostedPlayer","HostTurn","Winner","game","Name","render","onChangeModeClick","ChangeModeStyle","fontFamily","marginTop","fontWeight","fontSize","teamColor","turnMessageVariant","winnerColor","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Image from \"react-bootstrap/Image\";\nimport io from \"socket.io-client\";\nimport Badge from \"react-bootstrap/Badge\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Board from \"./components/Board\";\nimport ScoreBoard from \"./components/ScoreBoard\";\n\nconst status = {\n  INITIAL: \"initial\",\n  CREATED: \"created\",\n  RUNNING: \"running\",\n  FINISHED: \"finished\",\n};\nconst currentTurn = {\n  NONE: \"none\",\n  HOST: \"host\",\n  HOSTED: \"hosted\",\n};\nconst winner = {\n  INITIAL: \"initial\",\n  HOST: \"host\",\n  HOSTED: \"hosted\",\n};\n\nconst socket = io(\"http://localhost:3000\");\n\nclass App extends Component {\n  state = {\n    game_id: -1,\n    game_name: \"\",\n    user_id: \"\",\n    user_name: \"\",\n    status: status.INITIAL,\n    board: [],\n    captain_mode: false,\n    is_host: false,\n    start_button_clicked: false,\n    current_turn: currentTurn.NONE,\n    players: [],\n    previous_game: {},\n  };\n\n  constructor(props) {\n    super(props);\n  }\n  componentDidMount() {\n    // socket = io(\"http://localhost:3000\");\n    socket.on(\"INITIAL_USER_DATA\", (data) => {\n      this.setState({ user_id: data.user_id });\n      console.log(\"success!!!!!! user id is:\" + this.state.user_id);\n    });\n    socket.on(\"GAME_CREATED\", (data) => {\n      this.setState({ status: status.CREATED, game_id: data.Id });\n    });\n    socket.on(\"RUN_GAME\", (data) => {\n      this.setState({ status: status.RUNNING, board: data.Board });\n    });\n    socket.on(\"START_GAME\", (data) => {\n      this.setState({\n        current_turn: currentTurn.HOST,\n        players: [\n          {\n            name: \"Red Team\",\n            score: data.HostPlayer.Score,\n            id: 1,\n          },\n          {\n            name: \"Blue Team\",\n            score: data.HostedPlayer.Score,\n            id: 2,\n          },\n        ],\n      });\n    });\n    socket.on(\"UPDATE_BOARD\", (data) => {\n      this.setState({\n        board: data.Board,\n        current_turn: data.HostTurn ? currentTurn.HOST : currentTurn.HOSTED,\n        winner: data.Winner,\n        status:\n          data.Winner != winner.INITIAL ? status.FINISHED : this.state.status,\n        players: [\n          {\n            name: \"Red Team\",\n            score: data.HostPlayer.Score,\n            id: 1,\n          },\n          {\n            name: \"Blue Team\",\n            score: data.HostedPlayer.Score,\n            id: 2,\n          },\n        ],\n      });\n      if (data.Winner != winner.INITIAL && this.state.is_host) {\n        socket.emit(\"END_GAME\", { game_id: this.state.game_id });\n      }\n    });\n    socket.on(\"SAVE_PREVIOUS\", (data) => {\n      this.setState({ previous_game: data });\n    });\n    socket.on(\"INITIALIZE_STATE\", (data) => {\n      this.setState({\n        game_id: data.game.Id,\n        game_name: data.game.Name,\n        user_id: data.is_host\n          ? data.game.HostPlayer.Id\n          : data.game.HostedPlayer.Id,\n        user_name: data.is_host\n          ? data.game.HostPlayer.Name\n          : data.game.HostedPlayer.Name,\n        status: status.INITIAL,\n        board: [],\n        captain_mode: false,\n        is_host: data.is_host ? true : false,\n        start_button_clicked: false,\n        current_turn: currentTurn.NONE,\n        players: [],\n      });\n    });\n  }\n  createNewGame = () => {\n    this.setState({ is_host: true });\n    socket.emit(\"CREATE_GAME\", {\n      game_name: this.state.game_name,\n      user_id: this.state.user_id,\n      user_name: this.state.user_name,\n    });\n  };\n  ConnectGame = () => {\n    socket.emit(\"CONNECT_GAME\", {\n      game_id: this.state.game_id,\n      user_id: this.state.user_id,\n      user_name: this.state.user_name,\n    });\n  };\n  changeToCaptainMode = (e) => {\n    console.log(\"on changeToCaptainMode\");\n    this.setState({ captain_mode: true });\n  };\n\n  changeBackToNormalMode = (e) => {\n    console.log(\"on changeBackToNormalMode\");\n    this.setState({ captain_mode: false });\n  };\n  isMyTurn = () => {\n    let res = false;\n    if (\n      this.state.is_host == true &&\n      this.state.current_turn == currentTurn.HOST\n    )\n      res = true;\n    else if (\n      this.state.is_host == false &&\n      this.state.current_turn == currentTurn.HOSTED\n    )\n      res = true;\n    console.log(res);\n    return res;\n  };\n\n  startButtonOnClick = (e) => {\n    this.setState({ start_button_clicked: true });\n    socket.emit(\"START_GAME\", {\n      game_id: this.state.game_id,\n    });\n  };\n\n  rematchButtonOnClick = (e) => {\n    socket.emit(\"REMATCH\", this.state.previous_game);\n  };\n\n  render() {\n    let onChangeModeClick = this.state.captain_mode\n      ? this.changeBackToNormalMode\n      : this.changeToCaptainMode;\n\n    const ChangeModeStyle = {\n      fontFamily: \"Guttman Vilna\",\n      marginTop: \"0.5%\",\n      fontWeight: \"bold\",\n      fontSize: \"150%\",\n    };\n    const teamColor =\n      this.state.current_turn == currentTurn.HOST ? \"RED\" : \"BLUE\";\n    const turnMessageVariant =\n      this.state.current_turn == currentTurn.HOST ? \"danger\" : \"primary\";\n    const winnerColor = this.state.winner == winner.HOST ? \"RED\" : \"BLUE\";\n    return (\n      <div className=\"App\">\n        <Image\n          className={\n            this.state.status === status.RUNNING ? \"Img animator\" : \"Img\"\n          }\n          src=\"https://upload.wikimedia.org/wikipedia/he/4/48/Codenames-hebrew-cover.jpg\"\n        />\n        {this.state.status === status.INITIAL ? (\n          <div>\n            <Accordion className=\"Acc\">\n              <Card className=\"cards\">\n                <Card.Header>\n                  <Accordion.Toggle as={Button} variant=\"info\" eventKey=\"0\">\n                    Create Game!\n                  </Accordion.Toggle>\n                </Card.Header>\n                <Accordion.Collapse eventKey=\"0\">\n                  <Card.Body className=\"CardBody\">\n                    <Form>\n                      <Form.Row>\n                        <Form.Group as={Col} controlId=\"formGridUserName\">\n                          <Form.Label className=\"labels\">User Name</Form.Label>\n                          <Form.Control\n                            placeholder=\"Enter user name\"\n                            onChange={(e) => {\n                              this.setState({ user_name: e.target.value });\n                            }}\n                          />\n                        </Form.Group>\n                        <Form.Group as={Col} controlId=\"formGridRoomID\">\n                          <Form.Label className=\"labels\">Room Name</Form.Label>\n                          <Form.Control\n                            placeholder=\"Enter room Name\"\n                            onChange={(e) => {\n                              this.setState({ game_name: e.target.value });\n                            }}\n                          />\n                        </Form.Group>\n                      </Form.Row>\n                    </Form>\n                    <Button\n                      variant=\"success\"\n                      type=\"submit\"\n                      onClick={(e) => {\n                        this.createNewGame();\n                      }}\n                    >\n                      Submit\n                    </Button>\n                  </Card.Body>\n                </Accordion.Collapse>\n              </Card>\n              <Card className=\"cards\">\n                <Card.Header>\n                  <Accordion.Toggle\n                    className=\"ab\"\n                    as={Button}\n                    variant=\"info\"\n                    eventKey=\"1\"\n                  >\n                    Join Game!\n                  </Accordion.Toggle>\n                </Card.Header>\n                <Accordion.Collapse eventKey=\"1\">\n                  <Card.Body className=\"CardBody\">\n                    <Form>\n                      <Form.Row>\n                        <Form.Group as={Col} controlId=\"formGridUserName\">\n                          <Form.Label className=\"labels\">User Name</Form.Label>\n                          <Form.Control\n                            placeholder=\"Enter user name\"\n                            onChange={(e) => {\n                              this.setState({ user_name: e.target.value });\n                            }}\n                          />\n                        </Form.Group>\n                        <Form.Group as={Col} controlId=\"formGridRoomID\">\n                          <Form.Label className=\"labels\">Room Id</Form.Label>\n                          <Form.Control\n                            placeholder=\"Enter room ID\"\n                            onChange={(e) => {\n                              this.setState({ game_id: e.target.value });\n                            }}\n                          />\n                        </Form.Group>\n                      </Form.Row>\n                    </Form>\n                    <Button\n                      variant=\"success\"\n                      type=\"submit\"\n                      onClick={(e) => {\n                        this.ConnectGame();\n                      }}\n                    >\n                      Submit\n                    </Button>\n                  </Card.Body>\n                </Accordion.Collapse>\n              </Card>\n            </Accordion>\n          </div>\n        ) : null}\n        {this.state.status === status.CREATED ? (\n          <div>\n            <h1>\n              <Badge variant=\"success\">\n                Room #{this.state.game_id} had been created!\n              </Badge>\n            </h1>\n            <h1>\n              <Badge variant=\"success\">Waiting for a player to join...</Badge>\n            </h1>\n            <Spinner className=\"sp\" animation=\"grow\" variant=\"danger\" />\n          </div>\n        ) : null}\n        {this.state.status === status.RUNNING ? (\n          <div>\n            <div>\n              {this.state.is_host ? (\n                !this.state.start_button_clicked ? (\n                  <Button\n                    style={ChangeModeStyle}\n                    variant=\"success\"\n                    onClick={this.startButtonOnClick}\n                  >\n                    Start\n                  </Button>\n                ) : null\n              ) : this.state.current_turn == currentTurn.NONE ? (\n                <div>\n                  <Badge style={ChangeModeStyle} variant=\"dark\">\n                    Waiting for Host to start the game..\n                  </Badge>\n                  <Spinner animation=\"border\" />\n                </div>\n              ) : null}\n            </div>\n            <div>\n              {this.state.current_turn != currentTurn.NONE ? (\n                <div className=\"sb\">\n                  <ScoreBoard\n                    turn={this.state.current_turn}\n                    initialPlayers={this.state.players}\n                  ></ScoreBoard>\n                  <Button\n                    variant=\"dark\"\n                    style={ChangeModeStyle}\n                    onClick={onChangeModeClick}\n                  >\n                    Captain View\n                  </Button>\n                </div>\n              ) : null}\n            </div>\n            <div>\n              <Board\n                board={this.state.board}\n                isHost={this.state.is_host}\n                currentTurn={this.state.current_turn}\n                captainMode={this.state.captain_mode}\n                socket={socket}\n                gameId={this.state.game_id}\n               \n              ></Board>\n            </div>\n          </div>\n        ) : null}\n        {this.state.status === status.FINISHED ? (\n          <div>\n            <div>\n              <Badge\n                style={ChangeModeStyle}\n                variant={winnerColor == \"RED\" ? \"danger\" : \"primary\"}\n              >\n                {winnerColor} Team won!\n              </Badge>\n            </div>\n            <div>\n              <Button\n                style={ChangeModeStyle}\n                variant=\"dark\"\n                onClick={this.rematchButtonOnClick}\n              >\n                REMATCH!\n              </Button>\n            </div>\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}