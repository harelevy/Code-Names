{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\Harel\\\\Desktop\\\\JS\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\Harel\\\\Desktop\\\\JS\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\Harel\\\\Desktop\\\\JS\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\Harel\\\\Desktop\\\\JS\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import\"./App.css\";import Accordion from\"react-bootstrap/Accordion\";import Card from\"react-bootstrap/Card\";import Button from\"react-bootstrap/Button\";import Form from\"react-bootstrap/Form\";import Col from\"react-bootstrap/Col\";import Row from\"react-bootstrap/Row\";import Image from\"react-bootstrap/Image\";import io from\"socket.io-client\";import Badge from\"react-bootstrap/Badge\";import Spinner from\"react-bootstrap/Spinner\";import Board from\"./components/Board\";import ScoreBoard from\"./components/ScoreBoard\";var status={INITIAL:\"initial\",CREATED:\"created\",RUNNING:\"running\",FINISHED:\"finished\"};var currentTurn={NONE:\"none\",HOST:\"host\",HOSTED:\"hosted\"};var winner={INITIAL:\"initial\",HOST:\"host\",HOSTED:\"hosted\"};var socket=io(\"http://localhost:3000\");var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);var _super=_createSuper(App);function App(props){var _this;_classCallCheck(this,App);_this=_super.call(this,props);_this.state={game_id:-1,game_name:\"\",user_id:\"\",user_name:\"\",status:status.INITIAL,board:[],captain_mode:false,is_host:false,start_button_clicked:false,current_turn:currentTurn.NONE,players:[],previous_game:{}};_this.createNewGame=function(){_this.setState({is_host:true});socket.emit(\"CREATE_GAME\",{game_name:_this.state.game_name,user_id:_this.state.user_id,user_name:_this.state.user_name});};_this.ConnectGame=function(){socket.emit(\"CONNECT_GAME\",{game_id:_this.state.game_id,user_id:_this.state.user_id,user_name:_this.state.user_name});};_this.changeToCaptainMode=function(e){_this.setState({captain_mode:true});};_this.changeBackToNormalMode=function(e){_this.setState({captain_mode:false});};_this.isMyTurn=function(){var res=false;if(_this.state.is_host==true&&_this.state.current_turn==currentTurn.HOST)res=true;else if(_this.state.is_host==false&&_this.state.current_turn==currentTurn.HOSTED)res=true;return res;};_this.startButtonOnClick=function(e){_this.setState({start_button_clicked:true});socket.emit(\"START_GAME\",{game_id:_this.state.game_id});};_this.ShuffleButtonOnClick=function(e){socket.emit(\"SHUFFLE_BOARD\",{game_id:_this.state.game_id});};_this.rematchButtonOnClick=function(e){socket.emit(\"REMATCH\",_this.state.previous_game);};return _this;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;//host+hosted\nsocket.on(\"INITIAL_USER_DATA\",function(data){_this2.setState({user_id:data.user_id});console.log(\"success!!!!!! user id is:\"+_this2.state.user_id);console.log(data.games);});//host\nsocket.on(\"GAME_CREATED\",function(data){console.log(\"game created\");_this2.setState({status:status.CREATED,game_id:data.Id});});//host+hosted\nsocket.on(\"RUN_GAME\",function(data){_this2.setState({status:status.RUNNING,board:data.Board});});//host+hosted\nsocket.on(\"START_GAME\",function(data){_this2.setState({current_turn:currentTurn.HOST,players:[{name:\"Red Team\",score:data.HostPlayer.Score,id:1},{name:\"Blue Team\",score:data.HostedPlayer.Score,id:2}]});});socket.on(\"UPDATE_BOARD\",function(data){//console.log(data.Board);\n_this2.setState({board:data.Board,current_turn:data.HostTurn?currentTurn.HOST:currentTurn.HOSTED,winner:data.Winner,status:data.Winner!=winner.INITIAL?status.FINISHED:_this2.state.status,players:[{name:\"Red Team\",score:data.HostPlayer.Score,id:1},{name:\"Blue Team\",score:data.HostedPlayer.Score,id:2}]});if(data.Winner!=winner.INITIAL&&_this2.state.is_host){socket.emit(\"END_GAME\",{game_id:_this2.state.game_id});}});socket.on(\"SAVE_PREVIOUS\",function(data){_this2.setState({previous_game:data});});socket.on(\"INITIALIZE_STATE\",function(data){console.log(\"in initialize\");console.log(data.game.Board);_this2.setState({game_id:data.game.Id,game_name:data.game.Name,user_id:data.is_host?data.game.HostPlayer.Id:data.game.HostedPlayer.Id,user_name:data.is_host?data.game.HostPlayer.Name:data.game.HostedPlayer.Name,status:status.RUNNING,board:data.game.Board,captain_mode:false,is_host:data.is_host?true:false,start_button_clicked:false,current_turn:currentTurn.NONE,players:[]});});}},{key:\"render\",value:function render(){var _this3=this;var onChangeModeClick=this.state.captain_mode?this.changeBackToNormalMode:this.changeToCaptainMode;var ChangeModeStyle={fontFamily:\"Guttman Vilna\",marginTop:\"0.5%\",fontWeight:\"bold\",fontSize:\"150%\"};var teamColor=this.state.current_turn==currentTurn.HOST?\"RED\":\"BLUE\";var turnMessageVariant=this.state.current_turn==currentTurn.HOST?\"danger\":\"primary\";var winnerColor=this.state.winner==winner.HOST?\"RED\":\"BLUE\";return/*#__PURE__*/React.createElement(\"div\",{className:\"App\"},/*#__PURE__*/React.createElement(Image,{className:this.state.status===status.RUNNING?\"Img animator\":\"Img\",src:\"https://upload.wikimedia.org/wikipedia/he/4/48/Codenames-hebrew-cover.jpg\"}),this.state.status===status.INITIAL?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Accordion,{className:\"Acc\"},/*#__PURE__*/React.createElement(Card,{className:\"cards\"},/*#__PURE__*/React.createElement(Card.Header,null,/*#__PURE__*/React.createElement(Accordion.Toggle,{as:Button,variant:\"info\",eventKey:\"0\"},\"Create Game!\")),/*#__PURE__*/React.createElement(Accordion.Collapse,{eventKey:\"0\"},/*#__PURE__*/React.createElement(Card.Body,{className:\"CardBody\"},/*#__PURE__*/React.createElement(Form,null,/*#__PURE__*/React.createElement(Form.Row,null,/*#__PURE__*/React.createElement(Form.Group,{as:Col,controlId:\"formGridUserName\"},/*#__PURE__*/React.createElement(Form.Label,{className:\"labels\"},\"User Name\"),/*#__PURE__*/React.createElement(Form.Control,{placeholder:\"Enter user name\",onChange:function onChange(e){_this3.setState({user_name:e.target.value});}})),/*#__PURE__*/React.createElement(Form.Group,{as:Col,controlId:\"formGridRoomID\"},/*#__PURE__*/React.createElement(Form.Label,{className:\"labels\"},\"Room Name\"),/*#__PURE__*/React.createElement(Form.Control,{placeholder:\"Enter room Name\",onChange:function onChange(e){_this3.setState({game_name:e.target.value});}})))),/*#__PURE__*/React.createElement(Button,{variant:\"success\",type:\"submit\",onClick:function onClick(e){_this3.createNewGame();}},\"Submit\")))),/*#__PURE__*/React.createElement(Card,{className:\"cards\"},/*#__PURE__*/React.createElement(Card.Header,null,/*#__PURE__*/React.createElement(Accordion.Toggle,{className:\"ab\",as:Button,variant:\"info\",eventKey:\"1\"},\"Join Game!\")),/*#__PURE__*/React.createElement(Accordion.Collapse,{eventKey:\"1\"},/*#__PURE__*/React.createElement(Card.Body,{className:\"CardBody\"},/*#__PURE__*/React.createElement(Form,null,/*#__PURE__*/React.createElement(Form.Row,null,/*#__PURE__*/React.createElement(Form.Group,{as:Col,controlId:\"formGridUserName\"},/*#__PURE__*/React.createElement(Form.Label,{className:\"labels\"},\"User Name\"),/*#__PURE__*/React.createElement(Form.Control,{placeholder:\"Enter user name\",onChange:function onChange(e){_this3.setState({user_name:e.target.value});}})),/*#__PURE__*/React.createElement(Form.Group,{as:Col,controlId:\"formGridRoomID\"},/*#__PURE__*/React.createElement(Form.Label,{className:\"labels\"},\"Room Id\"),/*#__PURE__*/React.createElement(Form.Control,{placeholder:\"Enter room ID\",onChange:function onChange(e){_this3.setState({game_id:e.target.value});}})))),/*#__PURE__*/React.createElement(Button,{variant:\"success\",type:\"submit\",onClick:function onClick(e){_this3.ConnectGame();}},\"Submit\")))))):null,this.state.status===status.CREATED?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h1\",null,/*#__PURE__*/React.createElement(Badge,{variant:\"success\"},\"Room #\",this.state.game_id,\" had been created!\")),/*#__PURE__*/React.createElement(\"h1\",null,/*#__PURE__*/React.createElement(Badge,{variant:\"success\"},\"Waiting for a player to join...\")),/*#__PURE__*/React.createElement(Spinner,{className:\"sp\",animation:\"grow\",variant:\"danger\"})):null,this.state.status===status.RUNNING?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",null,this.state.is_host?!this.state.start_button_clicked?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Button,{style:ChangeModeStyle,variant:\"dark\",onClick:this.ShuffleButtonOnClick},\"Shuffle Board\")),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Button,{style:ChangeModeStyle,variant:\"success\",onClick:this.startButtonOnClick},\"Start\"))):null:this.state.current_turn==currentTurn.NONE?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Badge,{style:ChangeModeStyle,variant:\"dark\"},\"Waiting for Host to start the game..\"),/*#__PURE__*/React.createElement(Spinner,{animation:\"border\"})):null),/*#__PURE__*/React.createElement(\"div\",null,this.state.current_turn!=currentTurn.NONE?/*#__PURE__*/React.createElement(\"div\",{className:\"sb\"},/*#__PURE__*/React.createElement(ScoreBoard,{turn:this.state.current_turn,initialPlayers:this.state.players}),/*#__PURE__*/React.createElement(Button,{variant:\"dark\",style:ChangeModeStyle,onClick:onChangeModeClick},\"Captain View\")):null),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Board,{board:this.state.board,isHost:this.state.is_host,currentTurn:this.state.current_turn,captainMode:this.state.captain_mode,socket:socket,gameId:this.state.game_id}))):null,this.state.status===status.FINISHED?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Badge,{style:ChangeModeStyle,variant:winnerColor==\"RED\"?\"danger\":\"primary\"},winnerColor,\" Team won!\")),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Button,{style:ChangeModeStyle,variant:\"dark\",onClick:this.rematchButtonOnClick},\"REMATCH!\"))):null);}}]);return App;}(Component);export default App;","map":{"version":3,"sources":["C:/Users/Harel/Desktop/JS/frontend/src/App.js"],"names":["React","Component","Accordion","Card","Button","Form","Col","Row","Image","io","Badge","Spinner","Board","ScoreBoard","status","INITIAL","CREATED","RUNNING","FINISHED","currentTurn","NONE","HOST","HOSTED","winner","socket","App","props","state","game_id","game_name","user_id","user_name","board","captain_mode","is_host","start_button_clicked","current_turn","players","previous_game","createNewGame","setState","emit","ConnectGame","changeToCaptainMode","e","changeBackToNormalMode","isMyTurn","res","startButtonOnClick","ShuffleButtonOnClick","rematchButtonOnClick","on","data","console","log","games","Id","name","score","HostPlayer","Score","id","HostedPlayer","HostTurn","Winner","game","Name","onChangeModeClick","ChangeModeStyle","fontFamily","marginTop","fontWeight","fontSize","teamColor","turnMessageVariant","winnerColor","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Image from \"react-bootstrap/Image\";\nimport io from \"socket.io-client\";\nimport Badge from \"react-bootstrap/Badge\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Board from \"./components/Board\";\nimport ScoreBoard from \"./components/ScoreBoard\";\n\nconst status = {\n  INITIAL: \"initial\",\n  CREATED: \"created\",\n  RUNNING: \"running\",\n  FINISHED: \"finished\",\n};\nconst currentTurn = {\n  NONE: \"none\",\n  HOST: \"host\",\n  HOSTED: \"hosted\",\n};\nconst winner = {\n  INITIAL: \"initial\",\n  HOST: \"host\",\n  HOSTED: \"hosted\",\n};\n\nconst socket = io(\"http://localhost:3000\");\n\nclass App extends Component {\n  state = {\n    game_id: -1,\n    game_name: \"\",\n    user_id: \"\",\n    user_name: \"\",\n    status: status.INITIAL,\n    board: [],\n    captain_mode: false,\n    is_host: false,\n    start_button_clicked: false,\n    current_turn: currentTurn.NONE,\n    players: [],\n    previous_game: {},\n  };\n\n  constructor(props) {\n    super(props);\n  }\n  componentDidMount() {\n    //host+hosted\n    socket.on(\"INITIAL_USER_DATA\", (data) => {\n      this.setState({ user_id: data.user_id });\n      console.log(\"success!!!!!! user id is:\" + this.state.user_id);\n    console.log(data.games);\n    });\n    //host\n    socket.on(\"GAME_CREATED\", (data) => {\n      console.log(\"game created\");\n      this.setState({ status: status.CREATED, game_id: data.Id });\n    });\n    //host+hosted\n    socket.on(\"RUN_GAME\", (data) => {\n\n      this.setState({ status: status.RUNNING, board: data.Board });\n    });\n   //host+hosted\n    socket.on(\"START_GAME\", (data) => {\n      this.setState({\n        current_turn: currentTurn.HOST,\n        players: [\n          {\n            name: \"Red Team\",\n            score: data.HostPlayer.Score,\n            id: 1,\n          },\n          {\n            name: \"Blue Team\",\n            score: data.HostedPlayer.Score,\n            id: 2,\n          },\n        ],\n      });\n    });\n    socket.on(\"UPDATE_BOARD\", (data) => {\n      //console.log(data.Board);\n      this.setState({\n        board: data.Board,\n        current_turn: data.HostTurn ? currentTurn.HOST : currentTurn.HOSTED,\n        winner: data.Winner,\n        status:\n          data.Winner != winner.INITIAL ? status.FINISHED : this.state.status,\n        players: [\n          {\n            name: \"Red Team\",\n            score: data.HostPlayer.Score,\n            id: 1,\n          },\n          {\n            name: \"Blue Team\",\n            score: data.HostedPlayer.Score,\n            id: 2,\n          },\n        ],\n      });\n      if (data.Winner != winner.INITIAL && this.state.is_host) {\n        socket.emit(\"END_GAME\", { game_id: this.state.game_id });\n      }\n    });\n    socket.on(\"SAVE_PREVIOUS\", (data) => {\n      this.setState({ previous_game: data });\n    });\n    socket.on(\"INITIALIZE_STATE\", (data) => {\n      console.log(\"in initialize\");\n      console.log(data.game.Board);\n      this.setState({\n        game_id: data.game.Id,\n        game_name: data.game.Name,\n        user_id: data.is_host\n          ? data.game.HostPlayer.Id\n          : data.game.HostedPlayer.Id,\n        user_name: data.is_host\n          ? data.game.HostPlayer.Name\n          : data.game.HostedPlayer.Name,\n        status: status.RUNNING,\n        board: data.game.Board,\n        captain_mode: false,\n        is_host: data.is_host ? true : false,\n        start_button_clicked: false,\n        current_turn: currentTurn.NONE,\n        players: [],\n      });\n    });\n    \n  }\n  createNewGame = () => {\n    this.setState({ is_host: true });\n    socket.emit(\"CREATE_GAME\", {\n      game_name: this.state.game_name,\n      user_id: this.state.user_id,\n      user_name: this.state.user_name,\n    });\n  };\n  ConnectGame = () => {\n    socket.emit(\"CONNECT_GAME\", {\n      game_id: this.state.game_id,\n      user_id: this.state.user_id,\n      user_name: this.state.user_name,\n    });\n  };\n  changeToCaptainMode = (e) => {\n    this.setState({ captain_mode: true });\n  };\n\n  changeBackToNormalMode = (e) => {\n    this.setState({ captain_mode: false });\n  };\n  isMyTurn = () => {\n    let res = false;\n    if (\n      this.state.is_host == true &&\n      this.state.current_turn == currentTurn.HOST\n    )\n      res = true;\n    else if (\n      this.state.is_host == false &&\n      this.state.current_turn == currentTurn.HOSTED\n    )\n      res = true;\n    return res;\n  };\n\n  startButtonOnClick = (e) => {\n    this.setState({ start_button_clicked: true });\n    socket.emit(\"START_GAME\", {\n      game_id: this.state.game_id,\n    });\n  };\n  ShuffleButtonOnClick = (e)=>{\n    socket.emit(\"SHUFFLE_BOARD\", {  game_id: this.state.game_id});\n  }\n  \n  rematchButtonOnClick = (e) => {\n    socket.emit(\"REMATCH\", this.state.previous_game);\n  };\n\n  render() {\n    let onChangeModeClick = this.state.captain_mode\n      ? this.changeBackToNormalMode\n      : this.changeToCaptainMode;\n\n    const ChangeModeStyle = {\n      fontFamily: \"Guttman Vilna\",\n      marginTop: \"0.5%\",\n      fontWeight: \"bold\",\n      fontSize: \"150%\",\n    };\n    const teamColor =\n      this.state.current_turn == currentTurn.HOST ? \"RED\" : \"BLUE\";\n    const turnMessageVariant =\n      this.state.current_turn == currentTurn.HOST ? \"danger\" : \"primary\";\n    const winnerColor = this.state.winner == winner.HOST ? \"RED\" : \"BLUE\";\n    return (\n      <div className=\"App\">\n        <Image\n          className={\n            this.state.status === status.RUNNING ? \"Img animator\" : \"Img\"\n          }\n          src=\"https://upload.wikimedia.org/wikipedia/he/4/48/Codenames-hebrew-cover.jpg\"\n        />\n        {this.state.status === status.INITIAL ? (\n          <div>\n            <Accordion className=\"Acc\">\n              <Card className=\"cards\">\n                <Card.Header>\n                  <Accordion.Toggle as={Button} variant=\"info\" eventKey=\"0\">\n                    Create Game!\n                  </Accordion.Toggle>\n                </Card.Header>\n                <Accordion.Collapse eventKey=\"0\">\n                  <Card.Body className=\"CardBody\">\n                    <Form>\n                      <Form.Row>\n                        <Form.Group as={Col} controlId=\"formGridUserName\">\n                          <Form.Label className=\"labels\">User Name</Form.Label>\n                          <Form.Control\n                            placeholder=\"Enter user name\"\n                            onChange={(e) => {\n                              this.setState({ user_name: e.target.value });\n                            }}\n                          />\n                        </Form.Group>\n                        <Form.Group as={Col} controlId=\"formGridRoomID\">\n                          <Form.Label className=\"labels\">Room Name</Form.Label>\n                          <Form.Control\n                            placeholder=\"Enter room Name\"\n                            onChange={(e) => {\n                              this.setState({ game_name: e.target.value });\n                            }}\n                          />\n                        </Form.Group>\n                      </Form.Row>\n                    </Form>\n                    <Button\n                      variant=\"success\"\n                      type=\"submit\"\n                      onClick={(e) => {\n                        this.createNewGame();\n                      }}\n                    >\n                      Submit\n                    </Button>\n                  </Card.Body>\n                </Accordion.Collapse>\n              </Card>\n              <Card className=\"cards\">\n                <Card.Header>\n                  <Accordion.Toggle\n                    className=\"ab\"\n                    as={Button}\n                    variant=\"info\"\n                    eventKey=\"1\"\n                  >\n                    Join Game!\n                  </Accordion.Toggle>\n                </Card.Header>\n                <Accordion.Collapse eventKey=\"1\">\n                  <Card.Body className=\"CardBody\">\n                    <Form>\n                      <Form.Row>\n                        <Form.Group as={Col} controlId=\"formGridUserName\">\n                          <Form.Label className=\"labels\">User Name</Form.Label>\n                          <Form.Control\n                            placeholder=\"Enter user name\"\n                            onChange={(e) => {\n                              this.setState({ user_name: e.target.value });\n                            }}\n                          />\n                        </Form.Group>\n                        <Form.Group as={Col} controlId=\"formGridRoomID\">\n                          <Form.Label className=\"labels\">Room Id</Form.Label>\n                          <Form.Control\n                            placeholder=\"Enter room ID\"\n                            onChange={(e) => {\n                              this.setState({ game_id: e.target.value });\n                            }}\n                          />\n                        </Form.Group>\n                      </Form.Row>\n                    </Form>\n                    <Button\n                      variant=\"success\"\n                      type=\"submit\"\n                      onClick={(e) => {\n                        this.ConnectGame();\n                      }}\n                    >\n                      Submit\n                    </Button>\n                  </Card.Body>\n                </Accordion.Collapse>\n              </Card>\n            </Accordion>\n          </div>\n        ) : null}\n        {this.state.status === status.CREATED ? (\n          <div>\n            <h1>\n              <Badge variant=\"success\">\n                Room #{this.state.game_id} had been created!\n              </Badge>\n            </h1>\n            <h1>\n              <Badge variant=\"success\">Waiting for a player to join...</Badge>\n            </h1>\n            <Spinner className=\"sp\" animation=\"grow\" variant=\"danger\" />\n          </div>\n        ) : null}\n        {this.state.status === status.RUNNING ? (\n          <div>\n            <div>\n              {this.state.is_host ? (\n                !this.state.start_button_clicked ? (\n                  <div>\n                  <div>\n                  <Button\n                    style={ChangeModeStyle}\n                    variant=\"dark\"\n                    onClick={this.ShuffleButtonOnClick}\n                  >\n                    Shuffle Board\n                  </Button>\n                  </div>\n                  <div>\n                  <Button\n                    style={ChangeModeStyle}\n                    variant=\"success\"\n                    onClick={this.startButtonOnClick}\n                  >\n                    Start\n                  </Button>\n                  </div>\n                  </div>\n                ) : null\n              ) : this.state.current_turn == currentTurn.NONE ? (\n                <div>\n                  <Badge style={ChangeModeStyle} variant=\"dark\">\n                    Waiting for Host to start the game..\n                  </Badge>\n                  <Spinner animation=\"border\" />\n                </div>\n              ) : null}\n            </div>\n            <div>\n              {this.state.current_turn != currentTurn.NONE ? (\n                <div className=\"sb\">\n                  <ScoreBoard\n                    turn={this.state.current_turn}\n                    initialPlayers={this.state.players}\n                  ></ScoreBoard>\n                  <Button\n                    variant=\"dark\"\n                    style={ChangeModeStyle}\n                    onClick={onChangeModeClick}\n                  >\n                    Captain View\n                  </Button>\n                </div>\n              ) : null}\n            </div>\n            <div>\n              <Board\n                board={this.state.board}\n                isHost={this.state.is_host}\n                currentTurn={this.state.current_turn}\n                captainMode={this.state.captain_mode}\n                socket={socket}\n                gameId={this.state.game_id}\n               \n              ></Board>\n            </div>\n          </div>\n        ) : null}\n        {this.state.status === status.FINISHED ? (\n          <div>\n            <div>\n              <Badge\n                style={ChangeModeStyle}\n                variant={winnerColor == \"RED\" ? \"danger\" : \"primary\"}\n              >\n                {winnerColor} Team won!\n              </Badge>\n            </div>\n            <div>\n              <Button\n                style={ChangeModeStyle}\n                variant=\"dark\"\n                onClick={this.rematchButtonOnClick}\n              >\n                REMATCH!\n              </Button>\n            </div>\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}