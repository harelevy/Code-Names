{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Harel\\\\Desktop\\\\JS\\\\frontend\\\\src\\\\components\\\\Card.jsx\";\nimport React, { Component } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport \"../App.css\";\nimport \"./Card.css\";\nimport Background from \"../images/background_image.jpg\";\nimport Flippy, { FrontSide, BackSide } from \"react-flippy\";\nconst belongs = {\n  INITIAL: \"initial\",\n  HOST: \"host\",\n  HOSTED: \"hosted\",\n  NEUTRAL: \"neutral\",\n  BLACK: \"black\"\n};\nconst currentTurn = {\n  NONE: \"none\",\n  HOST: \"host\",\n  HOSTED: \"hosted\"\n};\nexport default class Card extends Component {\n  constructor(props) {\n    super(); // this.onButtonClick = this.onButtonClick.bind(this);\n\n    this.state = {\n      isFliped: false\n    };\n\n    this.componentDidMount = () => {};\n\n    this.getBackgroundColor = _belongsTo => {\n      switch (_belongsTo) {\n        case belongs.HOST:\n          // if (this.props.captainMode)\n          return \"rgb(196, 19, 19)\"; // else if (this.state.isFliped)\n          //   return \"https://upload.wikimedia.org/wikipedia/he/4/48/Codenames-hebrew-cover.jpg\";\n\n          break;\n\n        case belongs.HOSTED:\n          return \"rgb(38, 80, 170)\";\n          break;\n\n        case belongs.NEUTRAL:\n          return \"rgb(214, 214, 95)\";\n          break;\n\n        case belongs.BLACK:\n          return \"black\";\n          break;\n\n        default:\n      }\n    };\n\n    this.isEnabled = () => {\n      if (this.state.isFliped) return false;\n      if (this.props.currentTurn == currentTurn.NONE) return true;else {\n        if (this.props.isHost && this.props.currentTurn == currentTurn.HOST) return true;else if (!this.props.isHost && this.props.currentTurn == currentTurn.HOSTED) return true;else return false;\n      }\n    };\n\n    this.getBackgroundImage = () => {\n      if (this.props.captainMode) return \"\";else {\n        return this.state.isFliped ? \"url(\" + Background + \")\" : \"\";\n      }\n    };\n\n    this.onButtonClick = e => {\n      e.preventDefault();\n      this.setState({\n        isFliped: true\n      });\n    };\n  }\n\n  render() {\n    const mystyle = {\n      margin: \"1%\",\n      paddingTop: \"10%\",\n      width: \"18%\",\n      backgroundColor: this.props.captainMode ? this.getBackgroundColor(this.props.card.belongsTo) : \" rgb(247, 214, 176)\",\n      backgroundImage: this.getBackgroundImage(),\n      backgroundSize: \"cover\",\n      borderRadius: \"0.3cm\",\n      borderColor: \"rgb(247, 214, 176)\",\n      position: \"relative\"\n    };\n    return (\n      /*#__PURE__*/\n      // <ReactCardFlip\n      //   isFlipped={this.state.isFlipped}\n      //   flipDirection=\"horizontal\"\n      // >\n      //   <Button style={mystyle} onClick={this.onButtonClick}>\n      //     {\" \"}\n      //     <h4\n      //       style={{\n      //         fontWeight: \"bold\",\n      //         fontFamily: \"Guttman Vilna\",\n      //         backgroundColor: \"white\",\n      //         color: \"black\",\n      //         position: \"absolute\",\n      //         bottom: 0,\n      //         left: 0,\n      //         right: 0,\n      //         marginLeft: \"10%\",\n      //         marginRight: \"10%\",\n      //         borderRadius: \"0.3cm\",\n      //         borderColor: \"black\",\n      //         borderWidth: \"5cm\",\n      //       }}\n      //     >\n      //       {this.props.card.value}\n      //     </h4>\n      //   </Button>\n      //   <Button onClick={this.onButtonClick}>Click to flip2</Button>\n      // </ReactCardFlip>\n      React.createElement(Button, {\n        className: this.state.isFliped ? \"rotator\" : \"\",\n        style: mystyle,\n        disabled: !this.isEnabled(),\n        onClick: this.onButtonClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        style: {\n          fontWeight: \"bold\",\n          fontFamily: \"Guttman Vilna\",\n          backgroundColor: \"white\",\n          color: \"black\",\n          position: \"absolute\",\n          bottom: 0,\n          left: 0,\n          right: 0,\n          marginLeft: \"10%\",\n          marginRight: \"10%\",\n          borderRadius: \"0.3cm\",\n          borderColor: \"black\",\n          borderWidth: \"5cm\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Flippy, {\n        flipOnClick: true,\n        flipDirection: \"horizontal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 10\n        }\n      }, /*#__PURE__*/React.createElement(FrontSide, {\n        style: {\n          backgroundColor: \"#41669d\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: this.state.isFliped ? \"rotator\" : \"\",\n        style: mystyle,\n        disabled: !this.isEnabled(),\n        onClick: this.onButtonClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        style: {\n          fontWeight: \"bold\",\n          fontFamily: \"Guttman Vilna\",\n          backgroundColor: \"white\",\n          color: \"black\",\n          position: \"absolute\",\n          bottom: 0,\n          left: 0,\n          right: 0,\n          marginLeft: \"10%\",\n          marginRight: \"10%\",\n          borderRadius: \"0.3cm\",\n          borderColor: \"black\",\n          borderWidth: \"5cm\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }\n      }, this.props.card.value))), /*#__PURE__*/React.createElement(BackSide, {\n        style: {\n          backgroundColor: \"#175852\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 9\n        }\n      })), this.props.card.value)) // <Button\n      //   className={this.state.isFliped ? \"rotator\" : \"\"}\n      //   style={mystyle}\n      //   disabled={!this.isEnabled()}\n      //   onClick={this.onButtonClick}\n      // >\n      //   <h4\n      //     style={{\n      //       fontWeight: \"bold\",\n      //       fontFamily: \"Guttman Vilna\",\n      //       backgroundColor: \"white\",\n      //       color: \"black\",\n      //       position: \"absolute\",\n      //       bottom: 0,\n      //       left: 0,\n      //       right: 0,\n      //       marginLeft: \"10%\",\n      //       marginRight: \"10%\",\n      //       borderRadius: \"0.3cm\",\n      //       borderColor: \"black\",\n      //       borderWidth: \"5cm\",\n      //     }}\n      //   >\n      //     {this.props.card.value}\n      //   </h4>\n      // </Button>\n\n    );\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Harel/Desktop/JS/frontend/src/components/Card.jsx"],"names":["React","Component","Button","Background","Flippy","FrontSide","BackSide","belongs","INITIAL","HOST","HOSTED","NEUTRAL","BLACK","currentTurn","NONE","Card","constructor","props","state","isFliped","componentDidMount","getBackgroundColor","_belongsTo","isEnabled","isHost","getBackgroundImage","captainMode","onButtonClick","e","preventDefault","setState","render","mystyle","margin","paddingTop","width","backgroundColor","card","belongsTo","backgroundImage","backgroundSize","borderRadius","borderColor","position","fontWeight","fontFamily","color","bottom","left","right","marginLeft","marginRight","borderWidth","value"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"../App.css\";\r\nimport \"./Card.css\";\r\nimport Background from \"../images/background_image.jpg\";\r\nimport Flippy, { FrontSide, BackSide } from \"react-flippy\";\r\nconst belongs = {\r\n  INITIAL: \"initial\",\r\n  HOST: \"host\",\r\n  HOSTED: \"hosted\",\r\n  NEUTRAL: \"neutral\",\r\n  BLACK: \"black\",\r\n};\r\n\r\nconst currentTurn = {\r\n  NONE: \"none\",\r\n  HOST: \"host\",\r\n  HOSTED: \"hosted\",\r\n};\r\nexport default class Card extends Component {\r\n  state = { isFliped: false };\r\n  componentDidMount = () => {};\r\n  constructor(props) {\r\n    super();\r\n    // this.onButtonClick = this.onButtonClick.bind(this);\r\n  }\r\n\r\n  getBackgroundColor = (_belongsTo) => {\r\n    switch (_belongsTo) {\r\n      case belongs.HOST:\r\n        // if (this.props.captainMode)\r\n        return \"rgb(196, 19, 19)\";\r\n        // else if (this.state.isFliped)\r\n        //   return \"https://upload.wikimedia.org/wikipedia/he/4/48/Codenames-hebrew-cover.jpg\";\r\n        break;\r\n      case belongs.HOSTED:\r\n        return \"rgb(38, 80, 170)\";\r\n        break;\r\n      case belongs.NEUTRAL:\r\n        return \"rgb(214, 214, 95)\";\r\n        break;\r\n      case belongs.BLACK:\r\n        return \"black\";\r\n        break;\r\n      default:\r\n    }\r\n  };\r\n  isEnabled = () => {\r\n    if (this.state.isFliped) return false;\r\n    if (this.props.currentTurn == currentTurn.NONE) return true;\r\n    else {\r\n      if (this.props.isHost && this.props.currentTurn == currentTurn.HOST)\r\n        return true;\r\n      else if (\r\n        !this.props.isHost &&\r\n        this.props.currentTurn == currentTurn.HOSTED\r\n      )\r\n        return true;\r\n      else return false;\r\n    }\r\n  };\r\n  getBackgroundImage = () => {\r\n    if (this.props.captainMode) return \"\";\r\n    else {\r\n      return this.state.isFliped ? \"url(\" + Background + \")\" : \"\";\r\n    }\r\n  };\r\n  onButtonClick = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ isFliped: true });\r\n  };\r\n  render() {\r\n    const mystyle = {\r\n      margin: \"1%\",\r\n      paddingTop: \"10%\",\r\n      width: \"18%\",\r\n      backgroundColor: this.props.captainMode\r\n        ? this.getBackgroundColor(this.props.card.belongsTo)\r\n        : \" rgb(247, 214, 176)\",\r\n      backgroundImage: this.getBackgroundImage(),\r\n      backgroundSize: \"cover\",\r\n      borderRadius: \"0.3cm\",\r\n      borderColor: \"rgb(247, 214, 176)\",\r\n      position: \"relative\",\r\n    };\r\n    return (\r\n      // <ReactCardFlip\r\n      //   isFlipped={this.state.isFlipped}\r\n      //   flipDirection=\"horizontal\"\r\n      // >\r\n      //   <Button style={mystyle} onClick={this.onButtonClick}>\r\n      //     {\" \"}\r\n      //     <h4\r\n      //       style={{\r\n      //         fontWeight: \"bold\",\r\n      //         fontFamily: \"Guttman Vilna\",\r\n      //         backgroundColor: \"white\",\r\n      //         color: \"black\",\r\n      //         position: \"absolute\",\r\n      //         bottom: 0,\r\n      //         left: 0,\r\n      //         right: 0,\r\n      //         marginLeft: \"10%\",\r\n      //         marginRight: \"10%\",\r\n      //         borderRadius: \"0.3cm\",\r\n      //         borderColor: \"black\",\r\n      //         borderWidth: \"5cm\",\r\n      //       }}\r\n      //     >\r\n      //       {this.props.card.value}\r\n      //     </h4>\r\n      //   </Button>\r\n\r\n      //   <Button onClick={this.onButtonClick}>Click to flip2</Button>\r\n      // </ReactCardFlip>\r\n      <Button\r\n      className={this.state.isFliped ? \"rotator\" : \"\"}\r\n      style={mystyle}\r\n      disabled={!this.isEnabled()}\r\n      onClick={this.onButtonClick}\r\n    >\r\n      <h4\r\n        style={{\r\n          fontWeight: \"bold\",\r\n          fontFamily: \"Guttman Vilna\",\r\n          backgroundColor: \"white\",\r\n          color: \"black\",\r\n          position: \"absolute\",\r\n          bottom: 0,\r\n          left: 0,\r\n          right: 0,\r\n          marginLeft: \"10%\",\r\n          marginRight: \"10%\",\r\n          borderRadius: \"0.3cm\",\r\n          borderColor: \"black\",\r\n          borderWidth: \"5cm\",\r\n        }}\r\n      >\r\n         <Flippy flipOnClick={true} flipDirection=\"horizontal\">\r\n        <FrontSide\r\n          style={{\r\n            backgroundColor: \"#41669d\",\r\n          }}\r\n        >\r\n          <Button\r\n            className={this.state.isFliped ? \"rotator\" : \"\"}\r\n            style={mystyle}\r\n            disabled={!this.isEnabled()}\r\n            onClick={this.onButtonClick}\r\n          >\r\n            <h4\r\n              style={{\r\n                fontWeight: \"bold\",\r\n                fontFamily: \"Guttman Vilna\",\r\n                backgroundColor: \"white\",\r\n                color: \"black\",\r\n                position: \"absolute\",\r\n                bottom: 0,\r\n                left: 0,\r\n                right: 0,\r\n                marginLeft: \"10%\",\r\n                marginRight: \"10%\",\r\n                borderRadius: \"0.3cm\",\r\n                borderColor: \"black\",\r\n                borderWidth: \"5cm\",\r\n              }}\r\n            >\r\n              {this.props.card.value}\r\n            </h4>\r\n          </Button>\r\n        </FrontSide>\r\n        <BackSide style={{ backgroundColor: \"#175852\" }}></BackSide>\r\n      </Flippy>\r\n        {this.props.card.value}\r\n      </h4>\r\n    </Button>\r\n     \r\n      // <Button\r\n      //   className={this.state.isFliped ? \"rotator\" : \"\"}\r\n      //   style={mystyle}\r\n      //   disabled={!this.isEnabled()}\r\n      //   onClick={this.onButtonClick}\r\n      // >\r\n      //   <h4\r\n      //     style={{\r\n      //       fontWeight: \"bold\",\r\n      //       fontFamily: \"Guttman Vilna\",\r\n      //       backgroundColor: \"white\",\r\n      //       color: \"black\",\r\n      //       position: \"absolute\",\r\n      //       bottom: 0,\r\n      //       left: 0,\r\n      //       right: 0,\r\n      //       marginLeft: \"10%\",\r\n      //       marginRight: \"10%\",\r\n      //       borderRadius: \"0.3cm\",\r\n      //       borderColor: \"black\",\r\n      //       borderWidth: \"5cm\",\r\n      //     }}\r\n      //   >\r\n      //     {this.props.card.value}\r\n      //   </h4>\r\n      // </Button>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}