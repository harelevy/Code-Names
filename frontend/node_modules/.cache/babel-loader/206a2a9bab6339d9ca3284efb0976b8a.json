{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Harel\\\\Desktop\\\\JS\\\\frontend\\\\src\\\\components\\\\Card.jsx\";\nimport React, { Component } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport \"../App.css\";\nimport \"./Card.css\";\nimport RED1 from \"../images/red1.jpg\";\nimport RED2 from \"../images/red2.jpg\";\nimport BLUE1 from \"../images/blue1.jpg\";\nimport BLUE2 from \"../images/blue2.jpg\";\nimport YELLOW1 from \"../images/yellow1.jpg\";\nimport YELLOW2 from \"../images/yellow2.jpg\";\nimport BLACK from \"../images/black.jpg\";\nconst belongs = {\n  INITIAL: \"initial\",\n  HOST: \"host\",\n  HOSTED: \"hosted\",\n  NEUTRAL: \"neutral\",\n  BLACK: \"black\"\n};\nconst currentTurn = {\n  NONE: \"none\",\n  HOST: \"host\",\n  HOSTED: \"hosted\"\n};\nexport default class Card extends Component {\n  constructor(props) {\n    super(); //this.setState({ isFliped: props.card.isFliped });\n    // console.log(props.card.isFliped);\n\n    this.state = {};\n\n    this.componentDidMount = () => {};\n\n    this.getBackgroundColor = _belongsTo => {\n      switch (_belongsTo) {\n        case belongs.HOST:\n          // if (this.props.captainMode)\n          return \"rgb(196, 19, 19)\"; // else if (this.state.isFliped)\n          //   return \"https://upload.wikimedia.org/wikipedia/he/4/48/Codenames-hebrew-cover.jpg\";\n\n          break;\n\n        case belongs.HOSTED:\n          return \"rgb(38, 80, 170)\";\n          break;\n\n        case belongs.NEUTRAL:\n          return \"rgb(214, 214, 95)\";\n          break;\n\n        case belongs.BLACK:\n          return \"black\";\n          break;\n\n        default:\n      }\n    };\n\n    this.isEnabled = () => {\n      if (this.props.card.IsFliped) return false;\n      if (this.props.currentTurn == currentTurn.NONE && this.isHost) return true;else {\n        if (this.props.isHost && this.props.currentTurn == currentTurn.HOST) return true;else if (!this.props.isHost && this.props.currentTurn == currentTurn.HOSTED) return true;else return false;\n      }\n    };\n\n    this.getBackgroundImage = () => {\n      var res = \"\";\n      if (this.props.captainMode || !this.props.card.IsFliped) return res;else {\n        const redColor = this.props.card.ImageOne ? RED1 : RED2;\n        const blueColor = this.props.card.ImageOne ? BLUE1 : BLUE2;\n        const yellowColor = this.props.card.ImageOne ? YELLOW1 : YELLOW2;\n\n        switch (this.props.card.BelongsTo) {\n          case belongs.HOST:\n            res = \"url(\" + redColor + \")\";\n            break;\n\n          case belongs.HOSTED:\n            res = \"url(\" + blueColor + \")\";\n            break;\n\n          case belongs.NEUTRAL:\n            res = \"url(\" + yellowColor + \")\";\n            break;\n\n          case belongs.BLACK:\n            res = \"url(\" + BLACK + \")\";\n            break;\n        }\n\n        return res;\n      }\n    };\n\n    this.onButtonClick = () => {\n      console.log(this.state.board);\n\n      try {\n        this.props.socket.emit(\"UPDATE_STATE\", {\n          card: this.props.card,\n          game_id: this.props.gameId // currentTurn: this.props.currentTurn,\n\n        });\n      } catch (ex) {\n        console.log(ex);\n      }\n    };\n  } //  if (belongsTo == belongs.HOST)\n\n\n  render() {\n    const mystyle = {\n      margin: \"1%\",\n      paddingTop: \"10%\",\n      width: \"18%\",\n      backgroundColor: this.props.captainMode ? this.getBackgroundColor(this.props.card.BelongsTo) : \" rgb(247, 214, 176)\",\n      backgroundImage: this.getBackgroundImage(),\n      backgroundSize: \"cover\",\n      borderRadius: \"0.3cm\",\n      borderColor: \"rgb(247, 214, 176)\",\n      position: \"relative\",\n      opacity: 1\n    };\n    return /*#__PURE__*/React.createElement(Button, {\n      className: this.props.card.IsFliped ? \"background\" : \"\",\n      style: mystyle,\n      disabled: !this.isEnabled(),\n      onClick: this.onButtonClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 7\n      }\n    }, !this.props.card.IsFliped ? /*#__PURE__*/React.createElement(\"h4\", {\n      style: {\n        fontWeight: \"bold\",\n        fontFamily: \"Guttman Vilna\",\n        backgroundColor: \"white\",\n        color: \"black\",\n        position: \"absolute\",\n        bottom: 0,\n        left: 0,\n        right: 0,\n        marginLeft: \"10%\",\n        marginRight: \"10%\",\n        borderRadius: \"0.3cm\",\n        borderColor: \"black\",\n        borderWidth: \"5cm\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }\n    }, this.props.card.Value) : null);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Harel/Desktop/JS/frontend/src/components/Card.jsx"],"names":["React","Component","Button","RED1","RED2","BLUE1","BLUE2","YELLOW1","YELLOW2","BLACK","belongs","INITIAL","HOST","HOSTED","NEUTRAL","currentTurn","NONE","Card","constructor","props","state","componentDidMount","getBackgroundColor","_belongsTo","isEnabled","card","IsFliped","isHost","getBackgroundImage","res","captainMode","redColor","ImageOne","blueColor","yellowColor","BelongsTo","onButtonClick","console","log","board","socket","emit","game_id","gameId","ex","render","mystyle","margin","paddingTop","width","backgroundColor","backgroundImage","backgroundSize","borderRadius","borderColor","position","opacity","fontWeight","fontFamily","color","bottom","left","right","marginLeft","marginRight","borderWidth","Value"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"../App.css\";\r\nimport \"./Card.css\";\r\nimport RED1 from \"../images/red1.jpg\";\r\nimport RED2 from \"../images/red2.jpg\";\r\nimport BLUE1 from \"../images/blue1.jpg\";\r\nimport BLUE2 from \"../images/blue2.jpg\";\r\nimport YELLOW1 from \"../images/yellow1.jpg\";\r\nimport YELLOW2 from \"../images/yellow2.jpg\";\r\nimport BLACK from \"../images/black.jpg\";\r\n\r\nconst belongs = {\r\n  INITIAL: \"initial\",\r\n  HOST: \"host\",\r\n  HOSTED: \"hosted\",\r\n  NEUTRAL: \"neutral\",\r\n  BLACK: \"black\",\r\n};\r\n\r\nconst currentTurn = {\r\n  NONE: \"none\",\r\n  HOST: \"host\",\r\n  HOSTED: \"hosted\",\r\n};\r\nexport default class Card extends Component {\r\n  state = {};\r\n  componentDidMount = () => {};\r\n  constructor(props) {\r\n    super();\r\n    //this.setState({ isFliped: props.card.isFliped });\r\n\r\n    // console.log(props.card.isFliped);\r\n  }\r\n\r\n  //  if (belongsTo == belongs.HOST)\r\n\r\n  getBackgroundColor = (_belongsTo) => {\r\n    switch (_belongsTo) {\r\n      case belongs.HOST:\r\n        // if (this.props.captainMode)\r\n        return \"rgb(196, 19, 19)\";\r\n        // else if (this.state.isFliped)\r\n        //   return \"https://upload.wikimedia.org/wikipedia/he/4/48/Codenames-hebrew-cover.jpg\";\r\n        break;\r\n      case belongs.HOSTED:\r\n        return \"rgb(38, 80, 170)\";\r\n        break;\r\n      case belongs.NEUTRAL:\r\n        return \"rgb(214, 214, 95)\";\r\n        break;\r\n      case belongs.BLACK:\r\n        return \"black\";\r\n        break;\r\n      default:\r\n    }\r\n  };\r\n  isEnabled = () => {\r\n    if (this.props.card.IsFliped) return false;\r\n    if (this.props.currentTurn == currentTurn.NONE && this.isHost) return true;\r\n    else {\r\n      if (this.props.isHost && this.props.currentTurn == currentTurn.HOST)\r\n        return true;\r\n      else if (\r\n        !this.props.isHost &&\r\n        this.props.currentTurn == currentTurn.HOSTED\r\n      )\r\n        return true;\r\n      else return false;\r\n    }\r\n  };\r\n  getBackgroundImage = () => {\r\n    var res = \"\";\r\n    if (this.props.captainMode || !this.props.card.IsFliped) return res;\r\n    else {\r\n      const redColor = this.props.card.ImageOne ? RED1 : RED2;\r\n      const blueColor = this.props.card.ImageOne ? BLUE1 : BLUE2;\r\n      const yellowColor = this.props.card.ImageOne ? YELLOW1 : YELLOW2;\r\n      switch (this.props.card.BelongsTo) {\r\n        case belongs.HOST:\r\n          res = \"url(\" + redColor + \")\";\r\n          break;\r\n        case belongs.HOSTED:\r\n          res = \"url(\" + blueColor + \")\";\r\n          break;\r\n        case belongs.NEUTRAL:\r\n          res = \"url(\" + yellowColor + \")\";\r\n          break;\r\n        case belongs.BLACK:\r\n          res = \"url(\" + BLACK + \")\";\r\n          break;\r\n      }\r\n\r\n      return res;\r\n    }\r\n  };\r\n  onButtonClick = () => {\r\n    console.log(this.state.board);\r\n\r\n    try {\r\n      this.props.socket.emit(\"UPDATE_STATE\", {\r\n        card: this.props.card,\r\n        game_id: this.props.gameId,\r\n        // currentTurn: this.props.currentTurn,\r\n      });\r\n    } catch (ex) {\r\n      console.log(ex);\r\n    }\r\n  };\r\n  render() {\r\n    const mystyle = {\r\n      margin: \"1%\",\r\n      paddingTop: \"10%\",\r\n      width: \"18%\",\r\n      backgroundColor: this.props.captainMode\r\n        ? this.getBackgroundColor(this.props.card.BelongsTo)\r\n        : \" rgb(247, 214, 176)\",\r\n      backgroundImage: this.getBackgroundImage(),\r\n      backgroundSize: \"cover\",\r\n      borderRadius: \"0.3cm\",\r\n      borderColor: \"rgb(247, 214, 176)\",\r\n      position: \"relative\",\r\n      opacity: 1,\r\n    };\r\n    return (\r\n      <Button\r\n        className={this.props.card.IsFliped ? \"background\" : \"\"}\r\n        style={mystyle}\r\n        disabled={!this.isEnabled()}\r\n        onClick={this.onButtonClick}\r\n      >\r\n        {!this.props.card.IsFliped ? (\r\n          <h4\r\n            style={{\r\n              fontWeight: \"bold\",\r\n              fontFamily: \"Guttman Vilna\",\r\n              backgroundColor: \"white\",\r\n              color: \"black\",\r\n              position: \"absolute\",\r\n              bottom: 0,\r\n              left: 0,\r\n              right: 0,\r\n              marginLeft: \"10%\",\r\n              marginRight: \"10%\",\r\n              borderRadius: \"0.3cm\",\r\n              borderColor: \"black\",\r\n              borderWidth: \"5cm\",\r\n            }}\r\n          >\r\n            {this.props.card.Value}\r\n          </h4>\r\n        ) : null}\r\n      </Button>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}