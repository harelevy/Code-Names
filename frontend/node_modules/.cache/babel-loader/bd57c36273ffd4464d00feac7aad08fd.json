{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Harel\\\\Desktop\\\\JS\\\\frontend\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Image from \"react-bootstrap/Image\";\nimport io from \"socket.io-client\";\nimport Badge from \"react-bootstrap/Badge\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Board from \"./components/Board\";\nimport ScoreBoard from \"./components/ScoreBoard\";\nconst status = {\n  INITIAL: \"initial\",\n  CREATED: \"created\",\n  RUNNING: \"running\",\n  FINISHED: \"finished\"\n};\nconst currentTurn = {\n  NONE: \"none\",\n  HOST: \"host\",\n  HOSTED: \"hosted\"\n};\nconst winner = {\n  INITIAL: \"initial\",\n  HOST: \"host\",\n  HOSTED: \"hosted\"\n};\nconst socket = io(\"http://localhost:3000\");\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      game_id: -1,\n      game_name: \"\",\n      user_id: \"\",\n      user_name: \"\",\n      status: status.INITIAL,\n      board: [],\n      captain_mode: false,\n      is_host: false,\n      start_button_clicked: false,\n      current_turn: currentTurn.NONE,\n      players: [],\n      winner: winner.INITIAL\n    };\n\n    this.createNewGame = () => {\n      this.setState({\n        is_host: true\n      });\n      socket.emit(\"CREATE_GAME\", {\n        game_name: this.state.game_name,\n        user_id: this.state.user_id,\n        user_name: this.state.user_name\n      });\n    };\n\n    this.ConnectGame = () => {\n      socket.emit(\"CONNECT_GAME\", {\n        game_id: this.state.game_id,\n        user_id: this.state.user_id,\n        user_name: this.state.user_name\n      });\n    };\n\n    this.changeToCaptainMode = e => {\n      console.log(\"on changeToCaptainMode\");\n      this.setState({\n        captain_mode: true\n      });\n    };\n\n    this.changeBackToNormalMode = e => {\n      console.log(\"on changeBackToNormalMode\");\n      this.setState({\n        captain_mode: false\n      });\n    };\n\n    this.isMyTurn = () => {\n      let res = false;\n      if (this.state.is_host == true && this.state.current_turn == currentTurn.HOST) res = true;else if (this.state.is_host == false && this.state.current_turn == currentTurn.HOSTED) res = true;\n      console.log(res);\n      return res;\n    };\n\n    this.startButtonOnClick = e => {\n      this.setState({\n        start_button_clicked: true\n      });\n      socket.emit(\"START_GAME\", {\n        game_id: this.state.game_id\n      });\n    };\n  }\n\n  componentDidMount() {\n    // socket = io(\"http://localhost:3000\");\n    socket.on(\"INITIAL_USER_DATA\", data => {\n      this.setState({\n        user_id: data.user_id\n      });\n      console.log(\"success!!!!!! user id is:\" + this.state.user_id);\n    });\n    socket.on(\"GAME_CREATED\", data => {\n      this.setState({\n        status: status.CREATED,\n        game_id: data.game_id\n      });\n    });\n    socket.on(\"RUN_GAME\", data => {\n      this.setState({\n        status: status.RUNNING,\n        board: data.board\n      });\n    });\n    socket.on(\"START_GAME\", data => {\n      this.setState({\n        current_turn: currentTurn.HOST,\n        players: [{\n          name: \"Red Team\",\n          score: data.host_player.score,\n          id: 1\n        }, {\n          name: \"Blue Team\",\n          score: data.hosted_player.score,\n          id: 2\n        }]\n      });\n    });\n    socket.on(\"UPDATE_BOARD\", data => {\n      this.setState({\n        board: data.board,\n        current_turn: data.hostTurn ? currentTurn.HOST : currentTurn.HOSTED,\n        winner: data.winner,\n        status: data.winner != winner.INITIAL ? status.FINISHED : this.state.status,\n        players: [{\n          name: \"Red Team\",\n          score: data.host_player.score,\n          id: 1\n        }, {\n          name: \"Blue Team\",\n          score: data.hosted_player.score,\n          id: 2\n        }]\n      });\n    });\n  }\n\n  render() {\n    let onChangeModeClick = this.state.captain_mode ? this.changeBackToNormalMode : this.changeToCaptainMode;\n    const ChangeModeStyle = {\n      fontFamily: \"Guttman Vilna\",\n      marginTop: \"0.5%\",\n      fontWeight: \"bold\",\n      fontSize: \"150%\"\n    };\n    const teamColor = this.state.current_turn == currentTurn.HOST ? \"RED\" : \"BLUE\";\n    const turnMessageVariant = this.state.current_turn == currentTurn.HOST ? \"danger\" : \"primary\";\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      className: this.state.status === status.RUNNING ? \"Img animator\" : \"Img\",\n      src: \"https://upload.wikimedia.org/wikipedia/he/4/48/Codenames-hebrew-cover.jpg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }\n    }), this.state.status === status.INITIAL ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Accordion, {\n      className: \"Acc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"cards\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Accordion.Toggle, {\n      as: Button,\n      variant: \"info\",\n      eventKey: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 19\n      }\n    }, \"Create Game!\")), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n      eventKey: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      className: \"CardBody\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridUserName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      className: \"labels\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 27\n      }\n    }, \"User Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n      placeholder: \"Enter user name\",\n      onChange: e => {\n        this.setState({\n          user_name: e.target.value\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridRoomID\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      className: \"labels\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 27\n      }\n    }, \"Room Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n      placeholder: \"Enter room Name\",\n      onChange: e => {\n        this.setState({\n          game_name: e.target.value\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 27\n      }\n    })))), /*#__PURE__*/React.createElement(Button, {\n      variant: \"success\",\n      type: \"submit\",\n      onClick: e => {\n        this.createNewGame();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 21\n      }\n    }, \"Submit\")))), /*#__PURE__*/React.createElement(Card, {\n      className: \"cards\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Accordion.Toggle, {\n      className: \"ab\",\n      as: Button,\n      variant: \"info\",\n      eventKey: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 19\n      }\n    }, \"Join Game!\")), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n      eventKey: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      className: \"CardBody\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridUserName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      className: \"labels\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 27\n      }\n    }, \"User Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n      placeholder: \"Enter user name\",\n      onChange: e => {\n        this.setState({\n          user_name: e.target.value\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridRoomID\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      className: \"labels\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 27\n      }\n    }, \"Room Id\"), /*#__PURE__*/React.createElement(Form.Control, {\n      placeholder: \"Enter room ID\",\n      onChange: e => {\n        this.setState({\n          game_id: e.target.value\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 27\n      }\n    })))), /*#__PURE__*/React.createElement(Button, {\n      variant: \"success\",\n      type: \"submit\",\n      onClick: e => {\n        this.ConnectGame();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 21\n      }\n    }, \"Submit\")))))) : null, this.state.status === status.CREATED ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Badge, {\n      variant: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 15\n      }\n    }, \"Room #\", this.state.game_id, \" had been created!\")), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Badge, {\n      variant: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 15\n      }\n    }, \"Waiting for a player to join...\")), /*#__PURE__*/React.createElement(Spinner, {\n      className: \"sp\",\n      animation: \"grow\",\n      variant: \"danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 13\n      }\n    })) : null, this.state.status === status.RUNNING ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 13\n      }\n    }, this.state.is_host ? !this.state.start_button_clicked ? /*#__PURE__*/React.createElement(Button, {\n      style: ChangeModeStyle,\n      variant: \"success\",\n      onClick: this.startButtonOnClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 19\n      }\n    }, \"Start\") : null : this.state.current_turn == currentTurn.NONE ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Badge, {\n      style: ChangeModeStyle,\n      variant: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 19\n      }\n    }, \"Waiting for Host to start the game..\"), /*#__PURE__*/React.createElement(Spinner, {\n      animation: \"border\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 19\n      }\n    })) : null), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 13\n      }\n    }, this.state.current_turn != currentTurn.NONE ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sb\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ScoreBoard, {\n      turn: this.state.current_turn,\n      initialPlayers: this.state.players,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"dark\",\n      style: ChangeModeStyle,\n      onClick: onChangeModeClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 19\n      }\n    }, \"Captain View\")) : null), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Board, {\n      board: this.state.board,\n      isHost: this.state.is_host,\n      currentTurn: this.state.current_turn,\n      captainMode: this.state.captain_mode,\n      socket: socket,\n      gameId: this.state.game_id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 15\n      }\n    }))) : null, this.state.status === status.FINISHED ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Badge, {\n      variant: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 13\n      }\n    }, this, \" Team won!\"), /*#__PURE__*/React.createElement(Button, {\n      style: ChangeModeStyle,\n      variant: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 13\n      }\n    })) : null);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Harel/Desktop/JS/frontend/src/App.js"],"names":["React","Component","Accordion","Card","Button","Form","Col","Row","Image","io","Badge","Spinner","Board","ScoreBoard","status","INITIAL","CREATED","RUNNING","FINISHED","currentTurn","NONE","HOST","HOSTED","winner","socket","App","constructor","props","state","game_id","game_name","user_id","user_name","board","captain_mode","is_host","start_button_clicked","current_turn","players","createNewGame","setState","emit","ConnectGame","changeToCaptainMode","e","console","log","changeBackToNormalMode","isMyTurn","res","startButtonOnClick","componentDidMount","on","data","name","score","host_player","id","hosted_player","hostTurn","render","onChangeModeClick","ChangeModeStyle","fontFamily","marginTop","fontWeight","fontSize","teamColor","turnMessageVariant","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Image from \"react-bootstrap/Image\";\nimport io from \"socket.io-client\";\nimport Badge from \"react-bootstrap/Badge\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Board from \"./components/Board\";\nimport ScoreBoard from \"./components/ScoreBoard\";\n\nconst status = {\n  INITIAL: \"initial\",\n  CREATED: \"created\",\n  RUNNING: \"running\",\n  FINISHED: \"finished\",\n};\nconst currentTurn = {\n  NONE: \"none\",\n  HOST: \"host\",\n  HOSTED: \"hosted\",\n};\nconst winner = {\n  INITIAL: \"initial\",\n  HOST: \"host\",\n  HOSTED: \"hosted\",\n};\n\nconst socket = io(\"http://localhost:3000\");\n\nclass App extends Component {\n  state = {\n    game_id: -1,\n    game_name: \"\",\n    user_id: \"\",\n    user_name: \"\",\n    status: status.INITIAL,\n    board: [],\n    captain_mode: false,\n    is_host: false,\n    start_button_clicked: false,\n    current_turn: currentTurn.NONE,\n    players: [],\n    winner: winner.INITIAL,\n  };\n\n  constructor(props) {\n    super(props);\n  }\n  componentDidMount() {\n    // socket = io(\"http://localhost:3000\");\n    socket.on(\"INITIAL_USER_DATA\", (data) => {\n      this.setState({ user_id: data.user_id });\n      console.log(\"success!!!!!! user id is:\" + this.state.user_id);\n    });\n    socket.on(\"GAME_CREATED\", (data) => {\n      this.setState({ status: status.CREATED, game_id: data.game_id });\n    });\n    socket.on(\"RUN_GAME\", (data) => {\n      this.setState({ status: status.RUNNING, board: data.board });\n    });\n    socket.on(\"START_GAME\", (data) => {\n      this.setState({\n        current_turn: currentTurn.HOST,\n        players: [\n          {\n            name: \"Red Team\",\n            score: data.host_player.score,\n            id: 1,\n          },\n          {\n            name: \"Blue Team\",\n            score: data.hosted_player.score,\n            id: 2,\n          },\n        ],\n      });\n    });\n    socket.on(\"UPDATE_BOARD\", (data) => {\n      this.setState({\n        board: data.board,\n        current_turn: data.hostTurn ? currentTurn.HOST : currentTurn.HOSTED,\n        winner: data.winner,\n        status:\n          data.winner != winner.INITIAL ? status.FINISHED : this.state.status,\n        players: [\n          {\n            name: \"Red Team\",\n            score: data.host_player.score,\n            id: 1,\n          },\n          {\n            name: \"Blue Team\",\n            score: data.hosted_player.score,\n            id: 2,\n          },\n        ],\n      });\n    });\n  }\n  createNewGame = () => {\n    this.setState({ is_host: true });\n    socket.emit(\"CREATE_GAME\", {\n      game_name: this.state.game_name,\n      user_id: this.state.user_id,\n      user_name: this.state.user_name,\n    });\n  };\n  ConnectGame = () => {\n    socket.emit(\"CONNECT_GAME\", {\n      game_id: this.state.game_id,\n      user_id: this.state.user_id,\n      user_name: this.state.user_name,\n    });\n  };\n  changeToCaptainMode = (e) => {\n    console.log(\"on changeToCaptainMode\");\n    this.setState({ captain_mode: true });\n  };\n\n  changeBackToNormalMode = (e) => {\n    console.log(\"on changeBackToNormalMode\");\n    this.setState({ captain_mode: false });\n  };\n  isMyTurn = () => {\n    let res = false;\n    if (\n      this.state.is_host == true &&\n      this.state.current_turn == currentTurn.HOST\n    )\n      res = true;\n    else if (\n      this.state.is_host == false &&\n      this.state.current_turn == currentTurn.HOSTED\n    )\n      res = true;\n    console.log(res);\n    return res;\n  };\n\n  startButtonOnClick = (e) => {\n    this.setState({ start_button_clicked: true });\n    socket.emit(\"START_GAME\", {\n      game_id: this.state.game_id,\n    });\n  };\n\n  render() {\n    let onChangeModeClick = this.state.captain_mode\n      ? this.changeBackToNormalMode\n      : this.changeToCaptainMode;\n\n    const ChangeModeStyle = {\n      fontFamily: \"Guttman Vilna\",\n      marginTop: \"0.5%\",\n      fontWeight: \"bold\",\n      fontSize: \"150%\",\n    };\n    const teamColor =\n      this.state.current_turn == currentTurn.HOST ? \"RED\" : \"BLUE\";\n    const turnMessageVariant =\n      this.state.current_turn == currentTurn.HOST ? \"danger\" : \"primary\";\n    return (\n      <div className=\"App\">\n        <Image\n          className={\n            this.state.status === status.RUNNING ? \"Img animator\" : \"Img\"\n          }\n          src=\"https://upload.wikimedia.org/wikipedia/he/4/48/Codenames-hebrew-cover.jpg\"\n        />\n        {this.state.status === status.INITIAL ? (\n          <div>\n            <Accordion className=\"Acc\">\n              <Card className=\"cards\">\n                <Card.Header>\n                  <Accordion.Toggle as={Button} variant=\"info\" eventKey=\"0\">\n                    Create Game!\n                  </Accordion.Toggle>\n                </Card.Header>\n                <Accordion.Collapse eventKey=\"0\">\n                  <Card.Body className=\"CardBody\">\n                    <Form>\n                      <Form.Row>\n                        <Form.Group as={Col} controlId=\"formGridUserName\">\n                          <Form.Label className=\"labels\">User Name</Form.Label>\n                          <Form.Control\n                            placeholder=\"Enter user name\"\n                            onChange={(e) => {\n                              this.setState({ user_name: e.target.value });\n                            }}\n                          />\n                        </Form.Group>\n                        <Form.Group as={Col} controlId=\"formGridRoomID\">\n                          <Form.Label className=\"labels\">Room Name</Form.Label>\n                          <Form.Control\n                            placeholder=\"Enter room Name\"\n                            onChange={(e) => {\n                              this.setState({ game_name: e.target.value });\n                            }}\n                          />\n                        </Form.Group>\n                      </Form.Row>\n                    </Form>\n                    <Button\n                      variant=\"success\"\n                      type=\"submit\"\n                      onClick={(e) => {\n                        this.createNewGame();\n                      }}\n                    >\n                      Submit\n                    </Button>\n                  </Card.Body>\n                </Accordion.Collapse>\n              </Card>\n              <Card className=\"cards\">\n                <Card.Header>\n                  <Accordion.Toggle\n                    className=\"ab\"\n                    as={Button}\n                    variant=\"info\"\n                    eventKey=\"1\"\n                  >\n                    Join Game!\n                  </Accordion.Toggle>\n                </Card.Header>\n                <Accordion.Collapse eventKey=\"1\">\n                  <Card.Body className=\"CardBody\">\n                    <Form>\n                      <Form.Row>\n                        <Form.Group as={Col} controlId=\"formGridUserName\">\n                          <Form.Label className=\"labels\">User Name</Form.Label>\n                          <Form.Control\n                            placeholder=\"Enter user name\"\n                            onChange={(e) => {\n                              this.setState({ user_name: e.target.value });\n                            }}\n                          />\n                        </Form.Group>\n                        <Form.Group as={Col} controlId=\"formGridRoomID\">\n                          <Form.Label className=\"labels\">Room Id</Form.Label>\n                          <Form.Control\n                            placeholder=\"Enter room ID\"\n                            onChange={(e) => {\n                              this.setState({ game_id: e.target.value });\n                            }}\n                          />\n                        </Form.Group>\n                      </Form.Row>\n                    </Form>\n                    <Button\n                      variant=\"success\"\n                      type=\"submit\"\n                      onClick={(e) => {\n                        this.ConnectGame();\n                      }}\n                    >\n                      Submit\n                    </Button>\n                  </Card.Body>\n                </Accordion.Collapse>\n              </Card>\n            </Accordion>\n          </div>\n        ) : null}\n        {this.state.status === status.CREATED ? (\n          <div>\n            <h1>\n              <Badge variant=\"success\">\n                Room #{this.state.game_id} had been created!\n              </Badge>\n            </h1>\n            <h1>\n              <Badge variant=\"success\">Waiting for a player to join...</Badge>\n            </h1>\n            <Spinner className=\"sp\" animation=\"grow\" variant=\"danger\" />\n          </div>\n        ) : null}\n        {this.state.status === status.RUNNING ? (\n          <div>\n            {/* <div>\n              {this.state.current_turn != currentTurn.NONE ? (\n                <Badge style={ChangeModeStyle} variant={turnMessageVariant}>\n                  Now is {teamColor} team turn\n                </Badge>\n              ) : null}\n            </div> */}\n\n            <div>\n              {this.state.is_host ? (\n                !this.state.start_button_clicked ? (\n                  <Button\n                    style={ChangeModeStyle}\n                    variant=\"success\"\n                    onClick={this.startButtonOnClick}\n                  >\n                    Start\n                  </Button>\n                ) : null\n              ) : this.state.current_turn == currentTurn.NONE ? (\n                <div>\n                  <Badge style={ChangeModeStyle} variant=\"dark\">\n                    Waiting for Host to start the game..\n                  </Badge>\n                  <Spinner animation=\"border\" />\n                </div>\n              ) : null}\n            </div>\n            {/* <div>\n              {this.state.current_turn != currentTurn.NONE ? (\n                <Badge style={ChangeModeStyle} variant=\"dark\">\n                  {this.isMyTurn()\n                    ? \"Guess a card!\"\n                    : \"Waiting for opponent guess.\"}\n                  {!this.isMyTurn() ? <Spinner animation=\"border\" /> : null}\n                </Badge>\n              ) : null}\n            </div> */}\n            <div>\n              {this.state.current_turn != currentTurn.NONE ? (\n                <div className=\"sb\">\n                  <ScoreBoard\n                    turn={this.state.current_turn}\n                    initialPlayers={this.state.players}\n                  ></ScoreBoard>\n                  <Button\n                    variant=\"dark\"\n                    style={ChangeModeStyle}\n                    onClick={onChangeModeClick}\n                  >\n                    Captain View\n                  </Button>\n                </div>\n              ) : null}\n            </div>\n            <div>\n              <Board\n                board={this.state.board}\n                isHost={this.state.is_host}\n                currentTurn={this.state.current_turn}\n                captainMode={this.state.captain_mode}\n                socket={socket}\n                gameId={this.state.game_id}\n              ></Board>\n            </div>\n          </div>\n        ) : null}\n        {this.state.status === status.FINISHED ? (\n          <div>\n            <Badge variant=\"success\">{this} Team won!</Badge>\n            <Button style={ChangeModeStyle} variant=\"success\"></Button>\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}