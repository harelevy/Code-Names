{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Harel\\\\Desktop\\\\JS\\\\frontend\\\\src\\\\components\\\\Card.jsx\";\nimport React, { Component } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport \"../App.css\";\nimport \"./Card.css\";\nimport RED1 from \"../images/red1.jpg\";\nimport RED2 from \"../images/red2.jpg\";\nimport BLUE1 from \"../images/blue1.jpg\";\nimport BLUE2 from \"../images/blue2.jpg\";\nimport YELLOW1 from \"../images/yellow1.jpg\";\nimport YELLOW2 from \"../images/yellow2.jpg\";\nimport BLACK from \"../images/black.jpg\";\nconst belongs = {\n  INITIAL: \"initial\",\n  HOST: \"host\",\n  HOSTED: \"hosted\",\n  NEUTRAL: \"neutral\",\n  BLACK: \"black\"\n};\nconst currentTurn = {\n  NONE: \"none\",\n  HOST: \"host\",\n  HOSTED: \"hosted\"\n};\nexport default class Card extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      isFliped: false\n    };\n\n    this.componentDidMount = () => {};\n\n    this.getBackgroundColor = _belongsTo => {\n      switch (_belongsTo) {\n        case belongs.HOST:\n          // if (this.props.captainMode)\n          return \"rgb(196, 19, 19)\"; // else if (this.state.isFliped)\n          //   return \"https://upload.wikimedia.org/wikipedia/he/4/48/Codenames-hebrew-cover.jpg\";\n\n          break;\n\n        case belongs.HOSTED:\n          return \"rgb(38, 80, 170)\";\n          break;\n\n        case belongs.NEUTRAL:\n          return \"rgb(214, 214, 95)\";\n          break;\n\n        case belongs.BLACK:\n          return \"black\";\n          break;\n\n        default:\n      }\n    };\n\n    this.isEnabled = () => {\n      if (this.state.isFliped) return false;\n      if (this.props.currentTurn == currentTurn.NONE) return true;else {\n        if (this.props.isHost && this.props.currentTurn == currentTurn.HOST) return true;else if (!this.props.isHost && this.props.currentTurn == currentTurn.HOSTED) return true;else return false;\n      }\n    };\n\n    this.getBackgroundImage = () => {\n      var res = \"\";\n      if (this.props.captainMode || !this.state.isFliped) return res;else {\n        switch (this.props.card.belongsTo) {\n          case belongs.HOST:\n            res = \"url(\" + RED1 + \")\";\n            break;\n\n          case belongs.HOSTED:\n            res = \"url(\" + BLUE1 + \")\";\n            break;\n\n          case belongs.NEUTRAL:\n            res = \"url(\" + YELLOW1 + \")\";\n            break;\n\n          case belongs.BLACK:\n            res = \"url(\" + BLACK + \")\";\n            break;\n        }\n\n        return res;\n      }\n    };\n\n    this.onButtonClick = () => {\n      this.setState({\n        isFliped: true\n      });\n      this.props.socket.emit(\"UPDATE_STATE\", this.card);\n    };\n  }\n\n  render() {\n    const mystyle = {\n      margin: \"1%\",\n      paddingTop: \"10%\",\n      width: \"18%\",\n      backgroundColor: this.props.captainMode ? this.getBackgroundColor(this.props.card.belongsTo) : \" rgb(247, 214, 176)\",\n      backgroundImage: this.getBackgroundImage(),\n      backgroundSize: \"cover\",\n      borderRadius: \"0.3cm\",\n      borderColor: \"rgb(247, 214, 176)\",\n      position: \"relative\",\n      opacity: 1\n    };\n    return /*#__PURE__*/React.createElement(Button, {\n      className: this.state.isFliped ? \"background\" : \"\",\n      style: mystyle,\n      disabled: !this.isEnabled(),\n      onClick: this.onButtonClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }\n    }, !this.state.isFliped ? /*#__PURE__*/React.createElement(\"h4\", {\n      style: {\n        fontWeight: \"bold\",\n        fontFamily: \"Guttman Vilna\",\n        backgroundColor: \"white\",\n        color: \"black\",\n        position: \"absolute\",\n        bottom: 0,\n        left: 0,\n        right: 0,\n        marginLeft: \"10%\",\n        marginRight: \"10%\",\n        borderRadius: \"0.3cm\",\n        borderColor: \"black\",\n        borderWidth: \"5cm\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }, this.props.card.value) : null);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Harel/Desktop/JS/frontend/src/components/Card.jsx"],"names":["React","Component","Button","RED1","RED2","BLUE1","BLUE2","YELLOW1","YELLOW2","BLACK","belongs","INITIAL","HOST","HOSTED","NEUTRAL","currentTurn","NONE","Card","constructor","props","state","isFliped","componentDidMount","getBackgroundColor","_belongsTo","isEnabled","isHost","getBackgroundImage","res","captainMode","card","belongsTo","onButtonClick","setState","socket","emit","render","mystyle","margin","paddingTop","width","backgroundColor","backgroundImage","backgroundSize","borderRadius","borderColor","position","opacity","fontWeight","fontFamily","color","bottom","left","right","marginLeft","marginRight","borderWidth","value"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"../App.css\";\r\nimport \"./Card.css\";\r\nimport RED1 from \"../images/red1.jpg\";\r\nimport RED2 from \"../images/red2.jpg\";\r\nimport BLUE1 from \"../images/blue1.jpg\";\r\nimport BLUE2 from \"../images/blue2.jpg\";\r\nimport YELLOW1 from \"../images/yellow1.jpg\";\r\nimport YELLOW2 from \"../images/yellow2.jpg\";\r\nimport BLACK from \"../images/black.jpg\";\r\n\r\nconst belongs = {\r\n  INITIAL: \"initial\",\r\n  HOST: \"host\",\r\n  HOSTED: \"hosted\",\r\n  NEUTRAL: \"neutral\",\r\n  BLACK: \"black\",\r\n};\r\n\r\nconst currentTurn = {\r\n  NONE: \"none\",\r\n  HOST: \"host\",\r\n  HOSTED: \"hosted\",\r\n};\r\nexport default class Card extends Component {\r\n  state = { isFliped: false };\r\n  componentDidMount = () => {};\r\n  constructor(props) {\r\n    super();\r\n  }\r\n\r\n  getBackgroundColor = (_belongsTo) => {\r\n    switch (_belongsTo) {\r\n      case belongs.HOST:\r\n        // if (this.props.captainMode)\r\n        return \"rgb(196, 19, 19)\";\r\n        // else if (this.state.isFliped)\r\n        //   return \"https://upload.wikimedia.org/wikipedia/he/4/48/Codenames-hebrew-cover.jpg\";\r\n        break;\r\n      case belongs.HOSTED:\r\n        return \"rgb(38, 80, 170)\";\r\n        break;\r\n      case belongs.NEUTRAL:\r\n        return \"rgb(214, 214, 95)\";\r\n        break;\r\n      case belongs.BLACK:\r\n        return \"black\";\r\n        break;\r\n      default:\r\n    }\r\n  };\r\n  isEnabled = () => {\r\n    if (this.state.isFliped) return false;\r\n    if (this.props.currentTurn == currentTurn.NONE) return true;\r\n    else {\r\n      if (this.props.isHost && this.props.currentTurn == currentTurn.HOST)\r\n        return true;\r\n      else if (\r\n        !this.props.isHost &&\r\n        this.props.currentTurn == currentTurn.HOSTED\r\n      )\r\n        return true;\r\n      else return false;\r\n    }\r\n  };\r\n  getBackgroundImage = () => {\r\n    var res = \"\";\r\n    if (this.props.captainMode || !this.state.isFliped) return res;\r\n    else {\r\n      switch (this.props.card.belongsTo) {\r\n        case belongs.HOST:\r\n          res = \"url(\" + RED1 + \")\";\r\n          break;\r\n        case belongs.HOSTED:\r\n          res = \"url(\" + BLUE1 + \")\";\r\n          break;\r\n        case belongs.NEUTRAL:\r\n          res = \"url(\" + YELLOW1 + \")\";\r\n          break;\r\n        case belongs.BLACK:\r\n          res = \"url(\" + BLACK + \")\";\r\n          break;\r\n      }\r\n      return res;\r\n    }\r\n  };\r\n  onButtonClick = () => {\r\n    this.setState({ isFliped: true });\r\n\r\n    this.props.socket.emit(\"UPDATE_STATE\",this.card);\r\n  };\r\n  render() {\r\n    const mystyle = {\r\n      margin: \"1%\",\r\n      paddingTop: \"10%\",\r\n      width: \"18%\",\r\n      backgroundColor: this.props.captainMode\r\n        ? this.getBackgroundColor(this.props.card.belongsTo)\r\n        : \" rgb(247, 214, 176)\",\r\n      backgroundImage: this.getBackgroundImage(),\r\n      backgroundSize: \"cover\",\r\n      borderRadius: \"0.3cm\",\r\n      borderColor: \"rgb(247, 214, 176)\",\r\n      position: \"relative\",\r\n      opacity: 1,\r\n    };\r\n    return (\r\n      <Button\r\n        className={this.state.isFliped ? \"background\" : \"\"}\r\n        style={mystyle}\r\n        disabled={!this.isEnabled()}\r\n        onClick={this.onButtonClick}\r\n      >\r\n        {!this.state.isFliped ? (\r\n          <h4\r\n            style={{\r\n              fontWeight: \"bold\",\r\n              fontFamily: \"Guttman Vilna\",\r\n              backgroundColor: \"white\",\r\n              color: \"black\",\r\n              position: \"absolute\",\r\n              bottom: 0,\r\n              left: 0,\r\n              right: 0,\r\n              marginLeft: \"10%\",\r\n              marginRight: \"10%\",\r\n              borderRadius: \"0.3cm\",\r\n              borderColor: \"black\",\r\n              borderWidth: \"5cm\",\r\n            }}\r\n          >\r\n            {this.props.card.value}\r\n          </h4>\r\n        ) : null}\r\n      </Button>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}